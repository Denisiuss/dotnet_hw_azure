# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: default

variables:
  majorVersion: 1
  minorVersion: 0
  patchVersion: $[counter(variables['majorVersion'].variables['minorVersion'].variables['patchVersion'], 1)]

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- script: |
    echo "##vso[task.setvariable variable=buildNumber;]$BUILD_BUILDID"
    echo "##vso[task.setvariable variable=version;]$(majorVersion).$(minorVersion).$(patchVersion)-$(Build.BuildId)"
  displayName: 'Set Package Version'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'  # Service connection name
    organization: 'denisiuss'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'Denisiuss_dotnet_hw_azure'
    cliProjectName: 'Denisiuss_dotnet_hw_azure'
    cliProjectVersion: '$(version)'
    extraProperties: |
      sonar.host.url=https://sonarcloud.io
      sonar.login=1671e6aa333d6d7f404609e08a3d1fdac67d3646

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'off'
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    displayName: 'Pack NuGet package'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '4fc719f4-420b-46dd-80c4-4d013603cf3d/a3086c74-7606-43de-bee6-e7dc5fbf9cda'
    displayName: 'Push NuGet package to Artifacts'